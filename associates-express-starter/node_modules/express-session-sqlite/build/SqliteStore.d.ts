/// <reference types="express-session" />
import { SqliteStoreParams } from './SqliteStoreBase';
interface ISqliteStore {
    new (config: SqliteStoreParams): any;
    get: (sid: string, callback: (err: any, session?: Express.SessionData | null) => void) => void;
    set: (sid: string, session: Express.SessionData, callback?: (err?: any) => void) => void;
    destroy: (sid: string, callback?: (err?: any) => void) => void;
    all: (callback: (err: any, obj?: {
        [sid: string]: Express.SessionData;
    } | null) => void) => void;
    length: (callback: (err: any, length?: number | null) => void) => void;
    clear: (callback?: (err?: any) => void) => void;
    touch: (sid: string, session: Express.SessionData, callback?: (err?: any) => void) => void;
}
export default function sqliteStoreFactory(session: any): ISqliteStore;
export {};
